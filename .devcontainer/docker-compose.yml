version: '3.8'

services:

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - gonet
  # Service pour l'application Go (votre conteneur de développement)
  app:
    env_file:
      - ../.env # Dit à Docker de remonter d'un dossier (../) pour trouver le .env
    depends_on:
      - mongo

    # Utilise une image Go fournie par Microsoft, similaire à votre demande.
    image: mcr.microsoft.com/devcontainers/go:1-bookworm
    volumes:
      # Monte le dossier de votre projet dans le conteneur.
      # '..' car le fichier est dans .devcontainer, on vise le dossier parent.
    - ..:/workspaces/ecrireback:cached
    working_dir: /workspaces/${localWorkspaceFolderBasename}

    # Permet au conteneur de rester en vie pour que vous puissiez vous y attacher.
    command: sleep infinity

    ports:
      # Mappe le port 8080 du conteneur au port 8080 de votre Mac.
      # C'est ce qui rend Gin accessible depuis votre navigateur local.
      - "8081:8081"

    # Connecte ce service au réseau 'gonet'.
    networks:
      - gonet


  # Service pour la base de données MongoDB
  mongo:
    image: mongo:latest
    ports:
     - "27017:27017"
    volumes:
      # Persiste les données de MongoDB en dehors du conteneur.
      - mongo-data:/data/db
    # Connecte ce service au réseau 'gonet'.
    networks:
      - gonet

# Définit le réseau partagé que les conteneurs utiliseront pour communiquer.
networks:
  gonet:
    driver: bridge

# Définit le volume pour la persistance des données MongoDB.
volumes:
  mongo-data: